# FormDee - Environment Configuration Template
# Copy this file to .env and update with your values

# ===============================================
# GOOGLE APPS SCRIPT CONFIGURATION
# ===============================================

# Your Google Apps Script Web App deployment URL
# Get this after deploying your Apps Script as a Web App
# Format: https://script.google.com/macros/s/YOUR_DEPLOYMENT_ID/exec
GAS_BASE_URL=https://script.google.com/macros/s/YOUR_DEPLOYMENT_ID/exec

# ===============================================
# ADMIN AUTHENTICATION
# ===============================================

# Admin API key for backend operations (min 32 characters)
# Used for form CRUD, deletion, and admin operations
# Generate a strong random key: openssl rand -base64 32
ADMIN_API_KEY=your-secure-admin-api-key-minimum-32-characters

# Admin UI key for frontend admin access (min 32 characters) 
# Used for accessing admin features in the web interface
# Generate a strong random key: openssl rand -base64 32
ADMIN_UI_KEY=your-secure-ui-key-minimum-32-characters

# ===============================================
# APPLICATION CONFIGURATION
# ===============================================

# Base URL of your Next.js application
# Development: http://localhost:3000
# Production: https://yourdomain.com
NEXT_PUBLIC_BASE_URL=http://localhost:3000

# ===============================================
# OPTIONAL: TESTING CONFIGURATION
# ===============================================

# Set to "true" to enable additional debug logging
# DEBUG=false

# Set to "true" to run tests in headless mode
# TEST_HEADLESS=true

# Custom test timeout in milliseconds (default: 30000)
# TEST_TIMEOUT=30000

# ===============================================
# PRODUCTION DEPLOYMENT NOTES
# ===============================================

# For production deployment:
# 1. Generate secure random keys (min 32 characters each)
# 2. Use your production domain for NEXT_PUBLIC_BASE_URL
# 3. Deploy Google Apps Script and get the production URL
# 4. Never commit this file with real values to version control
# 5. Use platform-specific environment variable management:
#    - Vercel: Project Settings → Environment Variables
#    - Netlify: Site Settings → Environment Variables
#    - Railway: Project Settings → Variables
#    - AWS/Azure/GCP: Use their secret management services

# ===============================================
# SECURITY BEST PRACTICES
# ===============================================

# ✅ Use strong, unique keys (32+ characters)
# ✅ Use different keys for different environments
# ✅ Store production keys securely (not in code)
# ✅ Regularly rotate keys in production
# ✅ Monitor access logs for suspicious activity
# ❌ Never commit real keys to version control
# ❌ Never share keys in plaintext communications
# ❌ Never use default or example keys in production